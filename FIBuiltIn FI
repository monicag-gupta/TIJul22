import java.util.function.*;
import java.util.*;

public class FIBuiltInClass {

	public static void main(String[] args) {
		Predicate<Integer> lowLimit=x -> x>=0;
		Predicate<Integer> highLimit=x -> x<=100;
		Predicate<Integer> Res = lowLimit.and(x->x<=100 );
		System.out.println("Valid Marks? : " + Res.test(99));
		Res = lowLimit.negate().or(highLimit.negate());
		System.out.println("InValid Marks? : " + Res.test(99));
		System.out.println("Valid Marks? : " + (!Res.test(99)));
		
		Consumer<Integer> printSq=x->System.out.println("Square of " + x + " is " + x*x);
		Consumer<Integer> printCub=x->System.out.println("Cube of " + x + " is " + x*x*x);
		System.out.println("Square Consumer.accept(5): "); 
		printSq.accept(5);
		Consumer<Integer> printOp=printSq.andThen(printCub);
		System.out.println("Square and Cube Consumer.accept(5): "); 
		printOp.accept(5);
		
		Function<Integer,Integer> pSq=x -> {System.out.println("\nThe Square is: " + (x*x)); return (x*x);};
		Function<Integer,Integer> pCu=x -> {System.out.println("\nThe Cube is: " + (x* x * x)); return (x*x*x);};
		Function<Integer,Integer> pSqCu=pSq.andThen(pCu);
		Function<Integer,Integer> pCuSq=pSq.compose(pCu);
		
		System.out.println(pSqCu.apply(5));
		System.out.println(pCuSq.apply(5));
		
		Supplier<Integer> sup100 = ()->100;
		System.out.println("Supplier giving 100 as interger : " + sup100.get());
		Supplier<Date> curDate = Date::new;
		System.out.println("Supplier giving current date : " + curDate.get());
		
		
	}

}
