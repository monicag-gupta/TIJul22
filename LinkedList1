import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class LLClass {
	public static void main(String[] args) {
		// Creating a LinkedList
		LinkedList<String> friends = new LinkedList<>();
		// Adding new elements to the end of the LinkedList using add() method.
		friends.add("Rajeev");
		friends.add("Akash");
		friends.add("Aman");
		friends.add("Harsh");
		System.out.println("Initial LinkedList : " + friends);
		friends.add(3, "Rupal"); // Adding at the specified position in the LinkedList
		System.out.println("After add(3, \"Rupal\") : " + friends);
		friends.addFirst("Lakshya"); // Adding an element at the beginning of the LinkedList
		System.out.println("After addFirst(\"Lakshya\") : " + friends);
		friends.addLast("Ramavatar"); // Add at end of the LinkedList (equivalent
										// to the add() )
		System.out.println("After addLast(\"Ramavatar\") : " + friends);
		List<String> familyFriends = new ArrayList<>();
		familyFriends.add("Punit");
		familyFriends.add("Sunil");
		familyFriends.add("Dhanush");
		familyFriends.add("Raju");
		familyFriends.add("Shreeram");
		familyFriends.add("Shivam");
		familyFriends.add("Bhawesh");
		friends.addAll(familyFriends);
		System.out.println("After addAll(familyFriends) : " + friends);
		friends.remove(3); // removing at position 3
		friends.removeFirst(); // remove first ele
		friends.removeLast(); // remove last ele
		System.out.println("After all the remove with (3, first, last) algorithms : " + friends);

	}
}
