import java.util.TimerTask;
import java.util.Date;
import java.util.Timer;

class ScheduledTask extends TimerTask {
	Date now;

	public void run() {
		now = new Date();
		System.out.println("Time is :" + now); // Display current time
	}
}

public class Main {
	public static void main(String args[]) throws InterruptedException {
		Timer time = new Timer(); // Instantiate Timer Object
		ScheduledTask st = new ScheduledTask(); // Instantiate SheduledTask
												// class
		time.schedule(st, 0, 1000); // Create Repetitively task for every 1 secs
		for (int i = 0; i <= 5; i++) {
			System.out.println("Execution in Main Thread...." + i);
			Thread.sleep(2000);
			if (i == 5) {
				System.out.println("Application Terminates");
				System.exit(0);
			}
		}
	}
}






import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;

public class Main extends TimerTask {
	String n;
	public Main(String n){
		this.n=n;
	}
	@Override
	public void run() {
		System.out.println(n + " Timer task started at:" + new Date());
		completeTask();
		System.out.println(n + " Timer task finished at:" + new Date());
	}

	private void completeTask() {
		try {
			// assuming it takes 2 secs to complete the task
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	public static void main(String args[]) {
		Main timerTask = new Main("Task1");
		// running timer task as daemon thread
		Timer timer = new Timer(true);
		timer.scheduleAtFixedRate(timerTask, 0, 10 * 100);
		System.out.println("TimerTask started");
		// cancel after sometime
		try {
			for(int i=1;i<=12;i++){
				System.out.println("Main is sleeping for : " + i + "times!");
				Thread.sleep(i*100);
			}
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		timer.cancel();
		System.out.println("TimerTask cancelled");
		try {
			Thread.sleep(3000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
