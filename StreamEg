import java.util.*;
import java.util.stream.*;

public class MapEg {

	public static void main(String[] args) {
		List<Integer> numbers = Arrays.asList(3, 2, 2, 3, 7, 3, 5);
		System.out.println("Original list: " + numbers);
		//get list of unique squares
		List<Integer> squaresList = numbers.stream().map( i -> i*i). collect(Collectors.toList());
		System.out.println("After map->i*i, the list: " + squaresList);
		squaresList = numbers.stream().map( i -> i*i).distinct().collect(Collectors.toList());
		System.out.println("After Distinct() : " + squaresList);
		System.out.println("\nPeek() running in the stream operations: ");
		//Lazy preocessing
		squaresList = numbers.stream()
				.distinct()
				.peek(i->System.out.print(i+ " : "))
				.map( i -> i*i)
				.peek(i->System.out.print(i+ ", "))
				.collect(Collectors.toList());
		System.out.println("\nAfter Distinct() : " + squaresList);
		
		
		//Eager Processing:
		squaresList = numbers.stream()
				.distinct().collect(Collectors.toList());
		squaresList = numbers.stream()
				.peek(i->System.out.print(i+ " : ")) //3 : 			2:
				.collect(Collectors.toList());
		squaresList = numbers.stream()
				.map( i -> i*i)
				.collect(Collectors.toList());
		squaresList = numbers.stream()
				.peek(i->System.out.print(i+ ", ")) //9, 			4,
				.collect(Collectors.toList());
		System.out.println("\nAfter Modification() : " + squaresList);
		
		
		
		

	}

}
