import java.io.*;
import java.sql.SQLException;
import java.util.*;
//Case 1: Parent method does not have any throws keyword
//Case 1: Parent method has not declared any Exception
class Parent{
	public void fn(){
		System.out.println("I am in Parent class");
	}
}
//Case 1.1 : Child1 overridden method has not declared any Exception as well
class Child1 extends Parent{
	public void fn(){
		System.out.println("I am in Child 1 class");
	}
}

//Case 1.2 : Child2 overridden method has declared any unchecked Exception
class Child2 extends Parent{
	public void fn() throws ArithmeticException{
		System.out.println("I am in Child 2 class");
	}
}
////Case 1.3 : Child3 overridden method has declared any checked Exception: Not possible
//class Child3 extends Parent{
//	public void fn() throws IOException{
//		System.out.println("I am in Child 2 class");
//	}
//}

//Case 2: Parent2 method does have a throws keyword with Unchecked Exception
//Case 2: Parent2 method has declared an ArithmeticException
class Parent2{
	public void fn() throws ArithmeticException{
		System.out.println("I am in Parent class");
	}
}
//Case 2.1 : Child21 overridden method has not declared any Exception as well
class Child21 extends Parent2{
	public void fn(){
		System.out.println("I am in Child 1 class");
	}
}

//Case 2.2 : Child22 overridden method has declared any other unchecked Exception
class Child22 extends Parent2{
	public void fn() throws ArrayIndexOutOfBoundsException{
		System.out.println("I am in Child 2 class");
	}
}
////Case 2.3 : Child23 overridden method has declared any checked Exception: Not possible
//class Child23 extends Parent2{
//	public void fn() throws IOException{
//		System.out.println("I am in Child 2 class");
//	}
//}



//Case 3: Parent3 method does have a throws keyword with Checked Exception
//Case 3: Parent3 method has declared an IOException
class Parent3{
	public void fn() throws IOException{
		System.out.println("I am in Parent class");
	}
}
//Case 3.1 : Child31 overridden method has not declared any Exception 
class Child31 extends Parent3{
	public void fn(){
		System.out.println("I am in Child 1 class");
	}
}

//Case 3.2 : Child32 overridden method has declared any other unchecked Exception
class Child32 extends Parent3{
	public void fn() throws ArrayIndexOutOfBoundsException{
		System.out.println("I am in Child 2 class");
	}
}

//Case 3.3 : Child33 overridden method has declared any other checked Exception : Not Allowed
//class Child33 extends Parent3{
//	public void fn() throws SQLException{
//		System.out.println("I am in Child 2 class");
//	}
//}

////Case 3.4 : Child34 overridden method has declared any parent checked Exception: Not possible
//class Child34 extends Parent3{
//	public void fn() throws Exception{
//		System.out.println("I am in Child 2 class");
//	}
//}

////Case 3.5 : Child35 overridden method has declared same checked Exception
class Child35 extends Parent3{
public void fn() throws IOException{
	System.out.println("I am in Child 2 class");
}
}


public class ExceptClass1 {

	public static void main(String[] args) throws IOException {
		
		Parent p=new Child1();
		p.fn();
		p=new Child2();
		p.fn();
		System.out.println("Continue in my code...");
	
	}
}
