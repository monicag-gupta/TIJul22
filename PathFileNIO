import java.io.IOException;
import java.nio.file.*;
public class PathFileNIO {
	 public static void main(String[] args) {
		 Path sourcePath = Paths.get("/Monica/test.txt");
		 Path destinationPath = Paths.get("/Monica/test-copy10.txt");
		 try {
		     Files.copy(sourcePath, destinationPath);
		     System.out.println("Done");
		 } catch(FileAlreadyExistsException e) {
		     //file already exists and unable to copy
		 } catch (IOException e) {
		     //permission issue
		     e.printStackTrace();
		 }
    }	}
    
    
    






import java.io.IOException;
import java.nio.file.*;
public class PathFileNIO {
	 public static void main(String[] args) {
    	String dirPath ="/Monica/subDir";
        // Check If Directory Already Exists Or Not?
        Path dirPathObj = Paths.get(dirPath);
        boolean dirExists = Files.exists(dirPathObj);
        if(dirExists) {
            System.out.println("! Directory Already Exists !");
        } else {
            try {
                // Creating The New Directory Structure
                Files.createDirectories(dirPathObj);
                System.out.println("! New Directory Successfully Created !");
            } catch (IOException ioExceptionObj) {
                System.out.println("Problem While Creating The Directory Structure: " + ioExceptionObj.getMessage());
            }
        }
    }	}






import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
class PathFileNIO {
	public static void main(String[] strings) {// instantiate a relative path
		//Path p1 = FileSystems.getDefault().getPath("Examples1", "aaa.txt");
		// instantiate a absolute path - windows OS
		Path p2 = Paths.get("C:\\Monica");
		Path currentDirectory = Paths.get("").toAbsolutePath(); // get current dir
		System.out.println(currentDirectory.toAbsolutePath());
		System.out.println(p2.resolve("aaa.txt")); 		// resolve path in Win OS
		Path path4 = Paths.get("C:\\Monica\\Examples1");
		Path p2_to_path4 = p2.relativize(path4); //relativize
		System.out.println(p2_to_path4);
		Path path4_to_p2 = path4.relativize(p2);
		System.out.println(path4_to_p2); // outcome is ..\..
		System.out.println(path4.normalize()); //normalize
		//output C:\Monica\Examples1
		Path path6 = Paths.get("C:\\Monica\\..\\Examples1");
		System.out.println(path6.normalize());		
	}		}
